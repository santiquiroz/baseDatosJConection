
CREATE TABLE USUARIO (
nick VARCHAR(20) PRIMARY KEY,
nombre VARCHAR(20),
password VARCHAR(20) NOT NULL,
ADMINISTRADOR VARCHAR(1) NOT NULL,
COMUN VARCHAR(1) NOT NULL
);

CREATE TABLE MUNICIPIO(
nombremunicipio VARCHAR(80) PRIMARY KEY
);

CREATE TABLE AUMENTOMUN(
fechamodificacion VARCHAR(20),
valor VARCHAR(20),
nombremunicipio VARCHAR(80) REFERENCES MUNICIPIO(nombremunicipio) ON DELETE CASCADE,
PRIMARY KEY (fechamodificacion,nombremunicipio)
);

CREATE TABLE CLIENTE (
telefono VARCHAR(20) PRIMARY KEY,
nombre VARCHAR(20),
fecha VARCHAR(20) NOT NULL,
puntos VARCHAR(20) NOT NULL,
comun VARCHAR(1),
empresarial VARCHAR(1),
nombremunicipio VARCHAR(80),
FOREIGN KEY(nombremunicipio) REFERENCES MUNICIPIO(nombremunicipio) ON DELETE SET NULL
     ON UPDATE CASCADE
);

CREATE TABLE AUMENTOCLIEN(
fechamodificacion VARCHAR(20),
valor VARCHAR(20),
telefono VARCHAR(20) REFERENCES CLIENTE(telefono)ON DELETE CASCADE,
PRIMARY KEY (fechamodificacion,telefono)
);


CREATE TABLE PRODUCTO(
codigo VARCHAR(20) PRIMARY KEY,
nombre VARCHAR(20) NOT NULL,
peso VARCHAR(20) NOT NULL,
tipo VARCHAR(20) NOT NULL,
descripcion VARCHAR(200),
precioBase VARCHAR(20) NOT NULL,
disponible VARCHAR(1) NOT NULL
);

CREATE TABLE AUMENTOPROD(
fechamodificacion VARCHAR(20),
valor VARCHAR(20),
codigo VARCHAR(20) REFERENCES PRODUCTO(codigo)ON DELETE CASCADE,
PRIMARY KEY (fechamodificacion,codigo)
);

CREATE TABLE EMPLEADO(
cedula VARCHAR(20) PRIMARY KEY,
telefono VARCHAR(20),
nombre VARCHAR(20),
direccion VARCHAR(20),
activo VARCHAR(1) NOT NULL,
inactivo VARCHAR(1) NOT NULL,
despedido VARCHAR(1) NOT NULL
);

CREATE TABLE PAGO(
fecha VARCHAR(20),
numero VARCHAR (20),
cantidad VARCHAR(20) NOT NULL,
cedula VARCHAR(20),
nick VARCHAR(20),
FOREIGN KEY (cedula) REFERENCES EMPLEADO(cedula)  ON DELETE SET NULL
     ON UPDATE CASCADE,
FOREIGN KEY (nick) REFERENCES USUARIO(nick)  ON DELETE CASCADE
     ON UPDATE CASCADE,
PRIMARY KEY(fecha,numero,nick)
);

CREATE TABLE PEDIDO(
fecha VARCHAR(20),
numero VARCHAR(20),
direccion VARCHAR(20) NOT NULL,
cedula VARCHAR(20),
telefono VARCHAR(20),
condonado VARCHAR(20) NOT NULL,
obsequio VARCHAR(20) NOT NULL,
nota VARCHAR(20),
precioBruto VARCHAR(20),
PrecioNeto VARCHAR(20),
nick VARCHAR(20),
estado VARCHAR(20),
FOREIGN KEY(nick) REFERENCES USUARIO(nick) ON DELETE SET NULL ON UPDATE CASCADE,
FOREIGN KEY(cedula) REFERENCES EMPLEADO(cedula) ON DELETE SET NULL
     ON UPDATE CASCADE,
FOREIGN KEY(telefono) REFERENCES CLIENTE(telefono) ON DELETE SET NULL
     ON UPDATE CASCADE,
PRIMARY KEY(fecha,numero)
);

CREATE TABLE PRODUCTOXPEDIDO(
precio VARCHAR(20),
puntos VARCHAR(20),
fecha VARCHAR(20) REFERENCES PEDIDO(fecha) ON DELETE CASCADE,
numero VARCHAR(20) REFERENCES PEDIDO(numero) ON DELETE CASCADE,
codigo VARCHAR (20)REFERENCES PRODUCTO(codigo) ON DELETE CASCADE,
PRIMARY KEY (fecha,numero,codigo)
);

CREATE TABLE HCLIENTEXPRODUCTO(
ultimoprecio VARCHAR (20),
fecha VARCHAR (20),
telefono VARCHAR(20) REFERENCES CLIENTE(telefono) ON DELETE CASCADE,
codigo VARCHAR(20) REFERENCES PRODUCTO(codigo) ON DELETE CASCADE,
PRIMARY KEY (telefono,codigo,fecha)
);

CREATE TABLE AUMENTOCLIENIN(
valor VARCHAR (20),
fechamodificacion VARCHAR (20),
telefono VARCHAR(20) REFERENCES CLIENTE(telefono) ON DELETE CASCADE,
codigo VARCHAR(20) REFERENCES PRODUCTO(codigo) ON DELETE CASCADE,
PRIMARY KEY (telefono,codigo,fechamodificacion)
);

CREATE TABLE STATIC(
codigo VARCHAR(20),
limPuntos VARCHAR(20),
obsequio VARCHAR(20),
condonable VARCHAR(20)
);
